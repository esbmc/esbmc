###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base
on: [push, pull_request]
jobs:
  super-linter:
    name: Apply super-linter
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: docker://github/super-linter:v2.1.1
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_PYTHON: true
          VALIDATE_BASH: true
          VALIDATE_MD: true
          VALIDATE_YAML: true
          VALIDATE_XML: true
          DISABLE_ERRORS: true # TODO: Eventually this will be removed

# Check project with clang-format
  code-style:
    name: Check C/C++ code-style
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install libtinfo-dev
    - name: Download Clang 11
      run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
    - name: Extract Clang 11
      run: tar xf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz && mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang
    - name: Run clang-format (src)
      run: find src -iname *.h -o -iname *.c -o -iname *.cpp -o -iname *.hpp -iname *.hh | grep -v src/ansi-c/cpp | grep -v src/clang-c-frontend/headers/ | xargs ./clang/bin/clang-format -style=file -i -fallback-style=none
    - name: Run clang-format (tests)
      run: find unit -iname *.h -o -iname *.c -o -iname *.cpp -o -iname *.hpp -iname *.hh  | xargs ./clang/bin/clang-format -style=file -i -fallback-style=none
    - name: Throws error if changes were made
      run: git diff --exit-code --ignore-cr-at-eol

  cmake-lint:
    name: Check CMake modules
    runs-on: ubuntu-20.04
    continue-on-error: true # TODO: Eventually this will be removed
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install cmakelint
      run: pip install cmakelint
    - name: Run CMake Lint
      run: find . -iname *.cmake -o -iname CMakeLists.txt | grep -v build | xargs cmakelint || echo "failure"
