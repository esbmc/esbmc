on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build-linux:
    name: Build Linux Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake bison flex gcc-multilib linux-libc-dev libboost-all-dev ninja-build python3-setuptools
      - name: Download Clang 9
        run: wget http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
      - name: Extract Clang 9
        run: tar xf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz && mv clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04 clang9
      - name: Setup boolector
        run: git clone https://github.com/boolector/boolector && cd boolector && git reset --hard 3.2.0 && ./contrib/setup-lingeling.sh && ./contrib/setup-btor2tools.sh && ./configure.sh --prefix $PWD/../boolector-release && cd build && make -j9 && make install
      - name: Setup Z3
        run: wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04.zip && unzip z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04.zip && mv z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04 z3
      - name: Get current folder and files
        run: pwd && ls
      - name: Configure CMake
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja -DClang_DIR=$PWD/../clang9 -DLLVM_DIR=$PWD/../clang9 -DBUILD_STATIC=On -DBoolector_DIR=$PWD/../boolector-release -DZ3_DIR=$PWD/../z3
      - name: Build ESBMC
        run: cd build && cmake --build . && cpack && mv ESBMC-*.sh ESBMC-Linux.sh
      - uses: actions/upload-artifact@v1
        with:
          name: release-linux
          path: ./build/ESBMC-Linux.sh
      
          
  build-macos:
    name: Build Darwin Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: brew install gmp cmake boost ninja python3 automake && pip3 install PySMT
      - name: Download Clang 9
        run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang+llvm-9.0.1-x86_64-apple-darwin.tar.xz
      - name: Extract Clang 9
        run: tar xf clang+llvm-9.0.1-x86_64-apple-darwin.tar.xz && mv clang+llvm-9.0.1-x86_64-apple-darwin clang9
      - name: Setup boolector
        run: git clone https://github.com/boolector/boolector && cd boolector && git reset --hard 3.2.0 && ./contrib/setup-lingeling.sh && ./contrib/setup-btor2tools.sh && ./configure.sh --prefix $PWD/../boolector-release && cd build && make -j9 && make install
      - name: Setup Z3
        run: brew install z3
      - name: Get current folder and files
        run: pwd && ls
      - name: Configure CMake
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja -DBUILD_STATIC=On -DClang_DIR=$PWD/../clang9 -DLLVM_DIR=$PWD/../clang9 -DBoolector_DIR=$PWD/../boolector-release -DZ3_DIR=$PWD/../z3 -DC2GOTO_INCLUDE_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/
      - name: Build ESBMC
        run: cd build && cmake --build . && cpack && mv ESBMC-*.sh ESBMC-Darwin.sh
      - uses: actions/upload-artifact@v1
        with:
          name: release-darwin
          path: ./build/ESBMC-Darwin.sh

  create-release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
      - name: Download Linux Build
        uses: actions/download-artifact@v1
        with:
          name: release-linux
          path: ./
      - name: Download Macos Build
        uses: actions/download-artifact@v1
        with:
          name: release-darwin
          path: ./
      - name: Get files
        run: ls
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (Linux)
        id: upload-release-asset-linux 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESBMC-Linux.sh
          asset_name: ESBMC-Linux.sh
          asset_content_type: text/x-shellscript
      - name: Upload Release Asset (Darwin)
        id: upload-release-asset-macos 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ESBMC-Darwin.sh
          asset_name: ESBMC-Darwin.sh
          asset_content_type: text/x-shellscript
