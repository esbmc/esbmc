name: Run Benchexec (SV-Comp)
on:
  workflow_dispatch:
    inputs:
      strategy:
        description: 'Which Strategy to use? (incr, kinduction, falsi). THIS IS BEING IGNORED!'
        required: true
        default: 'incr'
      timeout:
        description: 'Timeout for each benchmarks (in seconds)'
        required: true
        default: '30'
      options:
        description: 'Command-line flags to pass via ESBMC_OPTS'
        required: false
        default: ''

jobs:
  build-linux:
    name: Build Linux Release
    runs-on: ubuntu-latest
    container: rafaelsamenezes/esbmc-ci:clang11
    steps:
      - name: Small test
        run: echo ${{ github.event.inputs.timeout }}
      - name: Checkout code
        uses: actions/checkout@master
      - run: apt update  # Only for Docker jobs
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: Fix dubious ownership
        run: git config --global --add safe.directory /__w/esbmc/esbmc
      - name: Configure CMake
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja -DClang_DIR=/workspace/clang -DLLVM_DIR=/workspace/clang -DBUILD_STATIC=On -DBoolector_DIR=/workspace/boolector-release -DZ3_DIR=/workspace/z3
      - name: Build ESBMC
        run: cd build && cmake --build .
      - uses: actions/upload-artifact@v2
        with:
          name: release-linux
          path: ./build/src/esbmc/esbmc

  run-benchexec:
    runs-on: ['self-hosted', 'Linux', 'x64', 'benchexec']
    timeout-minutes: 12000
    needs: build-linux
    steps:
      - name: Download Linux Build
        uses: actions/download-artifact@v1
        with:
          name: release-linux
          path: ./
      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: esbmc-src
      - name: Run Benchexec
        env:
          TIMEOUT: ${{ inputs.timeout }}
          ESBMC_OPTS: ${{ inputs.options }}
          NUM_OF_THREADS: ${{ inputs.num_of_threads }}
        run: |
          cp esbmc-src/scripts/competitions/svcomp/esbmc-wrapper.py $HOME/esbmc-wrapper.py
          rm -rf $HOME/output-action $HOME/esbmc-output esbmc-src $HOME/run-output.zip
          mkdir $HOME/output-action
          mkdir $HOME/esbmc-output
          cp ./esbmc $HOME/output-action
          cd $HOME/output-action
          cp $HOME/esbmc-wrapper.py .
          cp $HOME/esbmc.xml .
          chmod +x ./esbmc         
          chmod +x ./esbmc-wrapper.py
          ls -l
          /usr/bin/benchexec -o ../esbmc-output/ -N 9 ./esbmc.xml --read-only-dir / --overlay-dir /home  -T ${{ github.event.inputs.timeout }} --container -r SV-COMP23_unreach-call
          zip -r run-output.zip ../esbmc-output
          cp run-output.zip $HOME
      - name: Copy files
        env:
          TIMEOUT: ${{ inputs.timeout }}
          ESBMC_OPTS: ${{ inputs.options }}
          NUM_OF_THREADS: ${{ inputs.num_of_threads }}
        run: |
          cp $HOME/run-output.zip .
      - uses: actions/upload-artifact@v2
        with:
          name: benchexec-result
          path: run-output.zip
