name: Run Benchexec (SV-Comp)
on:
  workflow_dispatch:
    inputs:
      timeout:
        description: 'Timeout for each benchmarks (in seconds)'
        required: true
        default: '30'
      options:
        description: 'Command-line flags to pass via ESBMC_OPTS'
        required: false
        default: ''
      mode:
        type: choice
        description: Mode
        options:
        - Full
        - Task
        - RunSet
      runset:
        type: choice
        description: Run-set to use
        options:
        - SV-COMP23_unreach-call
        - SV-COMP23_no-data-race
        - SV-COMP23_valid-memcleanup
        - SV-COMP23_valid-memsafety
        - SV-COMP23_termination
        - SV-COMP23_no-overflow
      task:
        type: choice
        description: Task to use
        options:
        - ReachSafety-Arrays
        - ReachSafety-BitVectors
        - ReachSafety-ControlFlow
        - ReachSafety-ECA
        - ReachSafety-Floats
        - ReachSafety-Heap
        - ReachSafety-Loops
        - ReachSafety-ProductLines
        - ReachSafety-Recursive
        - ReachSafety-Sequentialized
        - ReachSafety-XCSP
        - ReachSafety-Combinations
        - ReachSafety-Hardware
        - ConcurrencySafety-Main
        - ConcurrencySafety-MemSafety
        - ConcurrencySafety-NoOverflows
        - NoDataRace-Main
        - NoOverflows-Main
        - NoOverflows-Juliet
        - MemSafety-MemCleanup
        - MemSafety-Arrays
        - MemSafety-Heap
        - MemSafety-LinkedLists
        - MemSafety-Other
        - MemSafety-Juliet
        - SoftwareSystems-AWS-C-Common-ReachSafety
        - SoftwareSystems-BusyBox-ReachSafety
        - SoftwareSystems-BusyBox-MemSafety
        - SoftwareSystems-BusyBox-NoOverflows
        - SoftwareSystems-coreutils-ReachSafety
        - SoftwareSystems-coreutils-MemSafety
        - SoftwareSystems-coreutils-NoOverflows
        - SoftwareSystems-DeviceDriversLinux64-ReachSafety
        - SoftwareSystems-DeviceDriversLinux64-MemSafety
        - SoftwareSystems-DeviceDriversLinux64Large-ReachSafety
        - SoftwareSystems-DeviceDriversLinux64-MemSafety
        - SoftwareSystems-uthash-ReachSafety
        - SoftwareSystems-uthash-MemSafety
        - SoftwareSystems-uthash-NoOverflows
        - SoftwareSystems-OpenBSD-MemSafety
        - Termination-BitVectors
        - Termination-MainControlFlow
        - Termination-MainHeap
        - Termination-Other

jobs:

  # build-unix:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   name: Build ESBMC (${{ matrix.os }})
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build ESBMC
  #     run: ./scripts/build.sh -b Debug
  #   - uses: actions/upload-artifact@v3
  #       with:
  #         name: release-linux
  #         path: ./build/src/esbmc/esbmc

  run-benchexec:
    runs-on: ubuntu-latest
    timeout-minutes: 12000
    # needs: build-linux
    steps:
      # - name: Download Linux Build
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: release-linux
      #     path: ./
      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: esbmc-src
      - name: Run Benchexec (Full)
        if: ${{ inputs.mode == 'Full' }}
        run: echo 'Running full benchexec'
        env:
          TIMEOUT: ${{ inputs.timeout }}
          ESBMC_OPTS: ${{ inputs.options }}
          NUM_OF_THREADS: ${{ inputs.num_of_threads }}
      - name: Run Benchexec (RunSet)
        if: ${{ inputs.mode == 'RunSet' }}
        run: echo 'Running RunSet benchexec'
        env:
          TIMEOUT: ${{ inputs.timeout }}
          ESBMC_OPTS: ${{ inputs.options }}
          NUM_OF_THREADS: ${{ inputs.num_of_threads }}
      - name: Run Benchexec (Task)
        if: ${{ inputs.mode == 'Task' }}
        run: echo 'Running Task benchexec'
        env:
          TIMEOUT: ${{ inputs.timeout }}
          ESBMC_OPTS: ${{ inputs.options }}
          NUM_OF_THREADS: ${{ inputs.num_of_threads }}
