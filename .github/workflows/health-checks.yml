name: Health Checks

on: [push, pull_request]
jobs:  

  # Check testing tool suite
  testing-tool:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Runs testing tool unit test
      run: cd regression && python3 testing_tool_test.py


  fast-tests:
    name: Run unit and fuzz targets
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake bison flex gcc-multilib linux-libc-dev libboost-all-dev ninja-build python3-setuptools
    - name: Download Clang 11
      run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
    - name: Extract Clang 11
      run: tar xf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz && mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang
    - name: Get current folder and files
      run: pwd && ls
    - name: Configure CMake
      run: mkdir build && cd build && CC=../clang/bin/clang CXX=../clang/bin/clang++ cmake .. -GNinja -DBUILD_TESTING=On -DENABLE_FUZZER=On -DClang_DIR=$PWD/../clang -DLLVM_DIR=$PWD/../clang
    - name: Build BigInt Tests
      run: cd build && ninja biginttest && ninja bigintfuzz
    - name: Run tests
      run: cd build && ninja test

  clang-tidy:
    name: Run clang-tidy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install clang-tidy gperf libgmp-dev cmake bison flex gcc-multilib linux-libc-dev libboost-all-dev ninja-build python3-setuptools
    - name: Download Clang 11
      run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
    - name: Extract Clang 11
      run: tar xf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz && mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang
    - name: Get current folder and files
      run: pwd && ls
    - name: Configure CMake
      run: mkdir build && cd build && CC=../clang/bin/clang CXX=../clang/bin/clang++ cmake .. -GNinja -DENABLE_CLANG_TIDY=On -DClang_DIR=$PWD/../clang -DLLVM_DIR=$PWD/../clang
    - name: Run tests
      run: cd build && ninja || echo "fail" # TODO: Eventually this will be removed

  windows-clone:
    name: Check if Windows users can checkout this version
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
