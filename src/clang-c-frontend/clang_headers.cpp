#include <clang-c-frontend/clang_c_language.h>
#include <boost/filesystem.hpp>
#include <fstream>
#include <ac_config.h>
#include <util/filesystem.h>

#ifdef ESBMC_CLANG_HEADERS_BUNDLED
extern "C"
{
#  include <headers/cheaders.h> /* generated by build system */
#  undef ESBMC_FLAIL
}
#endif

const std::string &clang_c_languaget::clang_resource_dir()
{
#ifdef ESBMC_CLANG_HEADERS_BUNDLED
  // Dump clang headers into a temporary directory
  static bool dumped = false;
  /* About the path being static:
   * The static member 'dumped' above is used to check whether the headers were
   * ever extracted before. This guarantees that the same path is used
   * during a run. And no more than one is required anyway */
  static auto tmp =
    file_operations::create_tmp_dir("esbmc-headers-%%%%-%%%%-%%%%");
  if (!dumped)
  {
    std::string path = tmp.path() + "/include";
    boost::filesystem::create_directories(path);
#  define ESBMC_FLAIL(body, size, ...)                                         \
    std::ofstream(path + "/" #__VA_ARGS__).write(body, size);
#  include <headers/cheaders.h>
#  undef ESBMC_FLAIL
    dumped = true;
  }
  return tmp.path();
#else
  // clang headers not bundled, return the path set at compile time
  static const std::string path = ESBMC_CLANG_HEADER_DIR "/..";
  return path;
#endif
}
